// Code generated from internal/parser/YarnSpinnerLexer.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type YarnSpinnerLexer struct {
	IndentAwareLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var YarnSpinnerLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func yarnspinnerlexerLexerInit() {
	staticData := &YarnSpinnerLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "WHITESPACE", "COMMENTS",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "HeaderWhenMode", "HeaderTitleMode", "HeaderMode", "BodyMode",
		"TextMode", "TextEscapedMode", "TextCommandOrHashtagMode", "HashtagMode",
		"ExpressionMode", "CommandMode", "CommandTextMode", "CommandIDMode",
		"CommandIDOrExpressionMode",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "", "", "'when'", "'title'", "", "'---'", "", "'#'",
		"", "", "", "'==='", "'->'", "'=>'", "'<<'", "", "", "", "", "", "",
		"", "", "", "", "", "", "'always'", "'true'", "'false'", "'null'", "",
		"", "", "", "", "", "", "", "", "", "", "'+='", "'-='", "'*='", "'%='",
		"'/='", "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'", "','", "'as'",
		"", "", "'}'", "", "'.'", "", "", "", "", "", "", "", "'endif'", "",
		"", "", "", "", "", "", "", "'once'", "'endonce'", "", "", "", "", "'{'",
		"", "", "'string'", "'number'", "'bool'",
	}
	staticData.SymbolicNames = []string{
		"", "INDENT", "DEDENT", "BLANK_LINE_FOLLOWING_OPTION", "WS", "COMMENT",
		"NEWLINE", "HEADER_WHEN", "HEADER_TITLE", "ID", "BODY_START", "HEADER_DELIMITER",
		"HASHTAG", "HEADER_WHEN_UNKNOWN", "REST_OF_LINE", "BODY_WS", "BODY_END",
		"SHORTCUT_ARROW", "LINE_GROUP_ARROW", "COMMAND_START", "EXPRESSION_START",
		"ESCAPED_ANY", "TEXT_ESCAPE", "TEXT_COMMENT", "TEXT", "UNESCAPABLE_CHARACTER",
		"TEXT_COMMANDHASHTAG_WS", "TEXT_COMMANDHASHTAG_COMMENT", "TEXT_COMMANDHASHTAG_ERROR",
		"HASHTAG_WS", "HASHTAG_TEXT", "EXPR_WS", "EXPRESSION_WHEN_ALWAYS", "KEYWORD_TRUE",
		"KEYWORD_FALSE", "KEYWORD_NULL", "OPERATOR_ASSIGNMENT", "OPERATOR_LOGICAL_LESS_THAN_EQUALS",
		"OPERATOR_LOGICAL_GREATER_THAN_EQUALS", "OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS",
		"OPERATOR_LOGICAL_GREATER", "OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND",
		"OPERATOR_LOGICAL_OR", "OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT",
		"OPERATOR_MATHS_ADDITION_EQUALS", "OPERATOR_MATHS_SUBTRACTION_EQUALS",
		"OPERATOR_MATHS_MULTIPLICATION_EQUALS", "OPERATOR_MATHS_MODULUS_EQUALS",
		"OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", "OPERATOR_MATHS_SUBTRACTION",
		"OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", "OPERATOR_MATHS_MODULUS",
		"LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", "STRING", "FUNC_ID", "EXPRESSION_END",
		"VAR_ID", "DOT", "NUMBER", "COMMAND_NEWLINE", "COMMAND_WS", "COMMAND_IF",
		"COMMAND_ELSEIF", "COMMAND_ELSE", "COMMAND_SET", "COMMAND_ENDIF", "COMMAND_CALL",
		"COMMAND_DECLARE", "COMMAND_JUMP", "COMMAND_DETOUR", "COMMAND_RETURN",
		"COMMAND_ENUM", "COMMAND_CASE", "COMMAND_ENDENUM", "COMMAND_ONCE", "COMMAND_ENDONCE",
		"COMMAND_LOCAL", "COMMAND_END", "COMMAND_TEXT_NEWLINE", "COMMAND_TEXT_END",
		"COMMAND_EXPRESSION_START", "COMMAND_TEXT", "COMMAND_ID_NEWLINE", "TYPE_STRING",
		"TYPE_NUMBER", "TYPE_BOOL",
	}
	staticData.RuleNames = []string{
		"WS", "COMMENT", "NEWLINE", "HEADER_WHEN", "HEADER_TITLE", "ID", "IDENTIFIER_HEAD",
		"IDENTIFIER_CHARACTER", "IDENTIFIER_CHARACTERS", "BODY_START", "HEADER_DELIMITER",
		"HASHTAG", "HEADER_WHEN_DELIMITER", "HEADER_WHEN_UNKNOWN", "HEADER_TITLE_DELIMITER",
		"HEADER_TITLE_ID", "HEADER_TITLE_NEWLINE", "REST_OF_LINE", "HEADER_NEWLINE",
		"BODY_WS", "BODY_NEWLINE", "BODY_COMMENT", "BODY_END", "SHORTCUT_ARROW",
		"LINE_GROUP_ARROW", "COMMAND_START", "BODY_HASHTAG", "EXPRESSION_START",
		"ESCAPED_BRACKET_START", "ESCAPED_ANY", "ANY", "TEXT_NEWLINE", "TEXT_ESCAPED_MARKUP_BRACKET",
		"TEXT_ESCAPE", "TEXT_HASHTAG", "TEXT_EXPRESSION_START", "TEXT_COMMAND_START",
		"TEXT_COMMENT", "TEXT", "TEXT_FRAG", "TEXT_ESCAPED_CHARACTER", "UNESCAPABLE_CHARACTER",
		"TEXT_COMMANDHASHTAG_WS", "TEXT_COMMANDHASHTAG_COMMENT", "TEXT_COMMANDHASHTAG_COMMAND_START",
		"TEXT_COMMANDHASHTAG_HASHTAG", "TEXT_COMMANDHASHTAG_NEWLINE", "TEXT_COMMANDHASHTAG_ERROR",
		"HASHTAG_WS", "HASHTAG_TAG", "HASHTAG_TEXT", "EXPR_WS", "EXPRESSION_WHEN_ALWAYS",
		"EXPRESSION_WHEN_ONCE", "EXPRESSION_WHEN_IF", "KEYWORD_TRUE", "KEYWORD_FALSE",
		"KEYWORD_NULL", "OPERATOR_ASSIGNMENT", "OPERATOR_LOGICAL_LESS_THAN_EQUALS",
		"OPERATOR_LOGICAL_GREATER_THAN_EQUALS", "OPERATOR_LOGICAL_EQUALS", "OPERATOR_LOGICAL_LESS",
		"OPERATOR_LOGICAL_GREATER", "OPERATOR_LOGICAL_NOT_EQUALS", "OPERATOR_LOGICAL_AND",
		"OPERATOR_LOGICAL_OR", "OPERATOR_LOGICAL_XOR", "OPERATOR_LOGICAL_NOT",
		"OPERATOR_MATHS_ADDITION_EQUALS", "OPERATOR_MATHS_SUBTRACTION_EQUALS",
		"OPERATOR_MATHS_MULTIPLICATION_EQUALS", "OPERATOR_MATHS_MODULUS_EQUALS",
		"OPERATOR_MATHS_DIVISION_EQUALS", "OPERATOR_MATHS_ADDITION", "OPERATOR_MATHS_SUBTRACTION",
		"OPERATOR_MATHS_MULTIPLICATION", "OPERATOR_MATHS_DIVISION", "OPERATOR_MATHS_MODULUS",
		"LPAREN", "RPAREN", "COMMA", "EXPRESSION_AS", "TYPE_STRING", "TYPE_NUMBER",
		"TYPE_BOOL", "STRING", "FUNC_ID", "EXPRESSION_END", "EXPRESSION_COMMAND_END",
		"VAR_ID", "DOT", "NUMBER", "EXPRESSION_NEWLINE", "INT", "DIGIT", "COMMAND_NEWLINE",
		"COMMAND_WS", "COMMAND_IF", "COMMAND_ELSEIF", "COMMAND_ELSE", "COMMAND_SET",
		"COMMAND_ENDIF", "COMMAND_CALL", "COMMAND_DECLARE", "COMMAND_JUMP",
		"COMMAND_DETOUR", "COMMAND_RETURN", "COMMAND_ENUM", "COMMAND_CASE",
		"COMMAND_ENDENUM", "COMMAND_ONCE", "COMMAND_ENDONCE", "COMMAND_LOCAL",
		"COMMAND_END", "COMMAND_EXPRESSION_AT_START", "COMMAND_ARBITRARY", "COMMAND_TEXT_NEWLINE",
		"COMMAND_TEXT_END", "COMMAND_EXPRESSION_START", "COMMAND_TEXT", "COMMAND_ID_NEWLINE",
		"COMMAND_ID", "COMMAND_ID_END", "COMMAND_ID_OR_EXPRESSION_ID", "COMMAND_ID_OR_EXPRESSION_START",
		"COMMAND_ID_OR_EXPRESSION_END",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 93, 995, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1,
		6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2,
		7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8,
		7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13,
		2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2,
		19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
		7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7,
		29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34,
		2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2,
		40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45,
		7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7,
		50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55,
		2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2,
		61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66,
		7, 66, 2, 67, 7, 67, 2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7,
		71, 2, 72, 7, 72, 2, 73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76,
		2, 77, 7, 77, 2, 78, 7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2,
		82, 7, 82, 2, 83, 7, 83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87,
		7, 87, 2, 88, 7, 88, 2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7,
		92, 2, 93, 7, 93, 2, 94, 7, 94, 2, 95, 7, 95, 2, 96, 7, 96, 2, 97, 7, 97,
		2, 98, 7, 98, 2, 99, 7, 99, 2, 100, 7, 100, 2, 101, 7, 101, 2, 102, 7,
		102, 2, 103, 7, 103, 2, 104, 7, 104, 2, 105, 7, 105, 2, 106, 7, 106, 2,
		107, 7, 107, 2, 108, 7, 108, 2, 109, 7, 109, 2, 110, 7, 110, 2, 111, 7,
		111, 2, 112, 7, 112, 2, 113, 7, 113, 2, 114, 7, 114, 2, 115, 7, 115, 2,
		116, 7, 116, 2, 117, 7, 117, 2, 118, 7, 118, 2, 119, 7, 119, 2, 120, 7,
		120, 2, 121, 7, 121, 2, 122, 7, 122, 2, 123, 7, 123, 2, 124, 7, 124, 2,
		125, 7, 125, 2, 126, 7, 126, 1, 0, 4, 0, 270, 8, 0, 11, 0, 12, 0, 271,
		1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 280, 8, 1, 10, 1, 12, 1, 283,
		9, 1, 1, 1, 1, 1, 1, 2, 3, 2, 288, 8, 2, 1, 2, 1, 2, 3, 2, 292, 8, 2, 1,
		2, 5, 2, 295, 8, 2, 10, 2, 12, 2, 298, 9, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1,
		3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1,
		4, 1, 5, 1, 5, 3, 5, 319, 8, 5, 1, 6, 3, 6, 322, 8, 6, 1, 7, 1, 7, 3, 7,
		326, 8, 7, 1, 8, 4, 8, 329, 8, 8, 11, 8, 12, 8, 330, 1, 9, 1, 9, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 10, 3, 10, 340, 8, 10, 1, 10, 1, 10, 3, 10, 344, 8,
		10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 3, 12, 353, 8, 12,
		1, 12, 1, 12, 3, 12, 357, 8, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 14, 3, 14, 369, 8, 14, 1, 14, 1, 14, 3, 14,
		373, 8, 14, 1, 14, 1, 14, 1, 15, 3, 15, 378, 8, 15, 1, 15, 1, 15, 3, 15,
		382, 8, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 4,
		17, 392, 8, 17, 11, 17, 12, 17, 393, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22, 1, 22,
		1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31,
		1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 3, 32, 470, 8, 32, 1, 32, 1,
		32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34,
		1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1,
		36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 4, 38, 502, 8, 38,
		11, 38, 12, 38, 503, 1, 38, 3, 38, 507, 8, 38, 1, 39, 1, 39, 1, 40, 1,
		40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42,
		1, 42, 1, 43, 1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1,
		44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1,
		50, 4, 50, 555, 8, 50, 11, 50, 12, 50, 556, 1, 50, 1, 50, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1,
		52, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 53, 1, 54,
		1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		55, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57,
		1, 57, 1, 58, 1, 58, 1, 58, 3, 58, 609, 8, 58, 1, 59, 1, 59, 1, 59, 1,
		59, 1, 59, 3, 59, 616, 8, 59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 3, 60,
		623, 8, 60, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 3, 61, 631, 8, 61,
		1, 62, 1, 62, 1, 62, 3, 62, 636, 8, 62, 1, 63, 1, 63, 1, 63, 3, 63, 641,
		8, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64, 3, 64, 648, 8, 64, 1, 65, 1,
		65, 1, 65, 1, 65, 1, 65, 3, 65, 655, 8, 65, 1, 66, 1, 66, 1, 66, 1, 66,
		3, 66, 661, 8, 66, 1, 67, 1, 67, 1, 67, 1, 67, 3, 67, 667, 8, 67, 1, 68,
		1, 68, 1, 68, 1, 68, 3, 68, 673, 8, 68, 1, 69, 1, 69, 1, 69, 1, 70, 1,
		70, 1, 70, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73,
		1, 74, 1, 74, 1, 75, 1, 75, 1, 76, 1, 76, 1, 77, 1, 77, 1, 78, 1, 78, 1,
		79, 1, 79, 1, 80, 1, 80, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 83, 1, 83,
		1, 83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1,
		84, 1, 84, 1, 84, 1, 84, 1, 84, 1, 84, 1, 85, 1, 85, 1, 85, 1, 85, 1, 85,
		1, 85, 1, 85, 1, 86, 1, 86, 1, 86, 1, 86, 5, 86, 738, 8, 86, 10, 86, 12,
		86, 741, 9, 86, 1, 86, 1, 86, 1, 87, 1, 87, 1, 88, 1, 88, 1, 88, 1, 88,
		1, 89, 1, 89, 1, 89, 1, 89, 1, 89, 1, 89, 1, 89, 1, 90, 1, 90, 1, 90, 1,
		91, 1, 91, 1, 92, 1, 92, 1, 92, 1, 92, 1, 92, 3, 92, 768, 8, 92, 1, 93,
		4, 93, 771, 8, 93, 11, 93, 12, 93, 772, 1, 93, 1, 93, 1, 93, 1, 93, 1,
		93, 1, 93, 1, 94, 4, 94, 782, 8, 94, 11, 94, 12, 94, 783, 1, 95, 1, 95,
		1, 96, 1, 96, 1, 97, 1, 97, 1, 97, 1, 97, 1, 98, 1, 98, 1, 98, 1, 98, 1,
		98, 1, 98, 1, 98, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99, 1, 99,
		1, 99, 1, 99, 1, 99, 1, 100, 1, 100, 1, 100, 1, 100, 1, 100, 1, 100, 3,
		100, 818, 8, 100, 1, 101, 1, 101, 1, 101, 1, 101, 1, 101, 1, 101, 1, 101,
		1, 101, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102, 1, 102, 1, 103, 1, 103,
		1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 103, 1, 104, 1, 104,
		1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104, 1, 104,
		1, 104, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105, 1, 105,
		1, 105, 1, 106, 1, 106, 1, 106, 1, 106, 1, 106, 1, 106, 1, 106, 1, 106,
		1, 106, 1, 106, 1, 106, 1, 107, 1, 107, 1, 107, 1, 107, 1, 107, 1, 107,
		1, 107, 1, 107, 3, 107, 883, 8, 107, 1, 108, 1, 108, 1, 108, 1, 108, 1,
		108, 1, 108, 1, 108, 1, 108, 1, 108, 1, 109, 1, 109, 1, 109, 1, 109, 1,
		109, 1, 109, 1, 109, 1, 109, 1, 109, 1, 110, 1, 110, 1, 110, 1, 110, 1,
		110, 1, 110, 1, 110, 1, 110, 1, 110, 3, 110, 912, 8, 110, 1, 111, 1, 111,
		1, 111, 1, 111, 1, 111, 1, 112, 1, 112, 1, 112, 1, 112, 1, 112, 1, 112,
		1, 112, 1, 112, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113, 1, 113,
		1, 113, 1, 114, 1, 114, 1, 114, 1, 114, 1, 114, 1, 115, 1, 115, 1, 115,
		1, 115, 1, 115, 1, 115, 1, 116, 1, 116, 1, 116, 1, 116, 1, 116, 1, 117,
		1, 117, 1, 118, 1, 118, 1, 118, 1, 118, 1, 118, 1, 119, 1, 119, 1, 119,
		1, 119, 1, 120, 4, 120, 963, 8, 120, 11, 120, 12, 120, 964, 1, 121, 1,
		121, 1, 122, 1, 122, 1, 122, 1, 122, 1, 122, 1, 123, 1, 123, 1, 123, 1,
		123, 1, 123, 1, 123, 1, 124, 1, 124, 1, 124, 1, 124, 1, 124, 1, 125, 1,
		125, 1, 125, 1, 125, 1, 125, 1, 126, 1, 126, 1, 126, 1, 126, 1, 126, 1,
		126, 0, 0, 127, 14, 4, 16, 5, 18, 6, 20, 7, 22, 8, 24, 9, 26, 0, 28, 0,
		30, 0, 32, 10, 34, 11, 36, 12, 38, 0, 40, 13, 42, 0, 44, 0, 46, 0, 48,
		14, 50, 0, 52, 15, 54, 0, 56, 0, 58, 16, 60, 17, 62, 18, 64, 19, 66, 0,
		68, 20, 70, 0, 72, 21, 74, 0, 76, 0, 78, 0, 80, 22, 82, 0, 84, 0, 86, 0,
		88, 23, 90, 24, 92, 0, 94, 0, 96, 25, 98, 26, 100, 27, 102, 0, 104, 0,
		106, 0, 108, 28, 110, 29, 112, 0, 114, 30, 116, 31, 118, 32, 120, 0, 122,
		0, 124, 33, 126, 34, 128, 35, 130, 36, 132, 37, 134, 38, 136, 39, 138,
		40, 140, 41, 142, 42, 144, 43, 146, 44, 148, 45, 150, 46, 152, 47, 154,
		48, 156, 49, 158, 50, 160, 51, 162, 52, 164, 53, 166, 54, 168, 55, 170,
		56, 172, 57, 174, 58, 176, 59, 178, 60, 180, 91, 182, 92, 184, 93, 186,
		61, 188, 62, 190, 63, 192, 0, 194, 64, 196, 65, 198, 66, 200, 0, 202, 0,
		204, 0, 206, 67, 208, 68, 210, 69, 212, 70, 214, 71, 216, 72, 218, 73,
		220, 74, 222, 75, 224, 76, 226, 77, 228, 78, 230, 79, 232, 80, 234, 81,
		236, 82, 238, 83, 240, 84, 242, 85, 244, 0, 246, 0, 248, 86, 250, 87, 252,
		88, 254, 89, 256, 90, 258, 0, 260, 0, 262, 0, 264, 0, 266, 0, 14, 0, 1,
		2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 13, 2, 0, 9, 9, 32, 32, 2, 0, 10,
		10, 13, 13, 49, 0, 65, 90, 95, 95, 97, 122, 168, 168, 170, 170, 173, 173,
		175, 175, 178, 181, 183, 186, 188, 190, 192, 214, 216, 246, 248, 767, 880,
		5759, 5761, 6157, 6159, 7615, 7680, 8191, 8203, 8205, 8234, 8238, 8255,
		8256, 8276, 8276, 8288, 8399, 8448, 8591, 9312, 9471, 10102, 10131, 11264,
		11775, 11904, 12287, 12292, 12295, 12321, 12335, 12337, 55295, 63744, 64829,
		64832, 64975, 65008, 65055, 65072, 65092, 65095, 65533, 65536, 131069,
		131072, 196605, 196608, 262141, 262144, 327677, 327680, 393213, 393216,
		458749, 458752, 524285, 524288, 589821, 589824, 655357, 655360, 720893,
		720896, 786429, 786432, 851965, 851968, 917501, 917504, 983037, 5, 0, 48,
		57, 768, 879, 7616, 7679, 8400, 8447, 65056, 65071, 2, 0, 47, 47, 60, 60,
		7, 0, 10, 10, 13, 13, 35, 35, 47, 47, 60, 60, 92, 92, 123, 123, 7, 0, 35,
		35, 47, 47, 60, 60, 62, 62, 92, 92, 123, 123, 125, 125, 5, 0, 9, 10, 13,
		13, 32, 32, 35, 36, 60, 60, 4, 0, 10, 10, 13, 13, 34, 34, 92, 92, 2, 0,
		34, 34, 92, 92, 1, 0, 48, 57, 10, 0, 9, 13, 32, 32, 133, 133, 160, 160,
		5760, 5760, 8192, 8202, 8232, 8233, 8239, 8239, 8287, 8287, 12288, 12288,
		4, 0, 10, 10, 13, 13, 62, 62, 123, 123, 1017, 0, 14, 1, 0, 0, 0, 0, 16,
		1, 0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0,
		24, 1, 0, 0, 0, 0, 32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0,
		1, 38, 1, 0, 0, 0, 1, 40, 1, 0, 0, 0, 2, 42, 1, 0, 0, 0, 2, 44, 1, 0, 0,
		0, 2, 46, 1, 0, 0, 0, 3, 48, 1, 0, 0, 0, 3, 50, 1, 0, 0, 0, 4, 52, 1, 0,
		0, 0, 4, 54, 1, 0, 0, 0, 4, 56, 1, 0, 0, 0, 4, 58, 1, 0, 0, 0, 4, 60, 1,
		0, 0, 0, 4, 62, 1, 0, 0, 0, 4, 64, 1, 0, 0, 0, 4, 66, 1, 0, 0, 0, 4, 68,
		1, 0, 0, 0, 4, 70, 1, 0, 0, 0, 4, 72, 1, 0, 0, 0, 4, 74, 1, 0, 0, 0, 5,
		76, 1, 0, 0, 0, 5, 78, 1, 0, 0, 0, 5, 80, 1, 0, 0, 0, 5, 82, 1, 0, 0, 0,
		5, 84, 1, 0, 0, 0, 5, 86, 1, 0, 0, 0, 5, 88, 1, 0, 0, 0, 5, 90, 1, 0, 0,
		0, 6, 94, 1, 0, 0, 0, 6, 96, 1, 0, 0, 0, 7, 98, 1, 0, 0, 0, 7, 100, 1,
		0, 0, 0, 7, 102, 1, 0, 0, 0, 7, 104, 1, 0, 0, 0, 7, 106, 1, 0, 0, 0, 7,
		108, 1, 0, 0, 0, 8, 110, 1, 0, 0, 0, 8, 112, 1, 0, 0, 0, 8, 114, 1, 0,
		0, 0, 9, 116, 1, 0, 0, 0, 9, 118, 1, 0, 0, 0, 9, 120, 1, 0, 0, 0, 9, 122,
		1, 0, 0, 0, 9, 124, 1, 0, 0, 0, 9, 126, 1, 0, 0, 0, 9, 128, 1, 0, 0, 0,
		9, 130, 1, 0, 0, 0, 9, 132, 1, 0, 0, 0, 9, 134, 1, 0, 0, 0, 9, 136, 1,
		0, 0, 0, 9, 138, 1, 0, 0, 0, 9, 140, 1, 0, 0, 0, 9, 142, 1, 0, 0, 0, 9,
		144, 1, 0, 0, 0, 9, 146, 1, 0, 0, 0, 9, 148, 1, 0, 0, 0, 9, 150, 1, 0,
		0, 0, 9, 152, 1, 0, 0, 0, 9, 154, 1, 0, 0, 0, 9, 156, 1, 0, 0, 0, 9, 158,
		1, 0, 0, 0, 9, 160, 1, 0, 0, 0, 9, 162, 1, 0, 0, 0, 9, 164, 1, 0, 0, 0,
		9, 166, 1, 0, 0, 0, 9, 168, 1, 0, 0, 0, 9, 170, 1, 0, 0, 0, 9, 172, 1,
		0, 0, 0, 9, 174, 1, 0, 0, 0, 9, 176, 1, 0, 0, 0, 9, 178, 1, 0, 0, 0, 9,
		180, 1, 0, 0, 0, 9, 182, 1, 0, 0, 0, 9, 184, 1, 0, 0, 0, 9, 186, 1, 0,
		0, 0, 9, 188, 1, 0, 0, 0, 9, 190, 1, 0, 0, 0, 9, 192, 1, 0, 0, 0, 9, 194,
		1, 0, 0, 0, 9, 196, 1, 0, 0, 0, 9, 198, 1, 0, 0, 0, 9, 200, 1, 0, 0, 0,
		10, 206, 1, 0, 0, 0, 10, 208, 1, 0, 0, 0, 10, 210, 1, 0, 0, 0, 10, 212,
		1, 0, 0, 0, 10, 214, 1, 0, 0, 0, 10, 216, 1, 0, 0, 0, 10, 218, 1, 0, 0,
		0, 10, 220, 1, 0, 0, 0, 10, 222, 1, 0, 0, 0, 10, 224, 1, 0, 0, 0, 10, 226,
		1, 0, 0, 0, 10, 228, 1, 0, 0, 0, 10, 230, 1, 0, 0, 0, 10, 232, 1, 0, 0,
		0, 10, 234, 1, 0, 0, 0, 10, 236, 1, 0, 0, 0, 10, 238, 1, 0, 0, 0, 10, 240,
		1, 0, 0, 0, 10, 242, 1, 0, 0, 0, 10, 244, 1, 0, 0, 0, 10, 246, 1, 0, 0,
		0, 11, 248, 1, 0, 0, 0, 11, 250, 1, 0, 0, 0, 11, 252, 1, 0, 0, 0, 11, 254,
		1, 0, 0, 0, 12, 256, 1, 0, 0, 0, 12, 258, 1, 0, 0, 0, 12, 260, 1, 0, 0,
		0, 13, 262, 1, 0, 0, 0, 13, 264, 1, 0, 0, 0, 13, 266, 1, 0, 0, 0, 14, 269,
		1, 0, 0, 0, 16, 275, 1, 0, 0, 0, 18, 291, 1, 0, 0, 0, 20, 301, 1, 0, 0,
		0, 22, 308, 1, 0, 0, 0, 24, 316, 1, 0, 0, 0, 26, 321, 1, 0, 0, 0, 28, 325,
		1, 0, 0, 0, 30, 328, 1, 0, 0, 0, 32, 332, 1, 0, 0, 0, 34, 339, 1, 0, 0,
		0, 36, 347, 1, 0, 0, 0, 38, 352, 1, 0, 0, 0, 40, 363, 1, 0, 0, 0, 42, 368,
		1, 0, 0, 0, 44, 377, 1, 0, 0, 0, 46, 385, 1, 0, 0, 0, 48, 391, 1, 0, 0,
		0, 50, 395, 1, 0, 0, 0, 52, 401, 1, 0, 0, 0, 54, 405, 1, 0, 0, 0, 56, 410,
		1, 0, 0, 0, 58, 415, 1, 0, 0, 0, 60, 421, 1, 0, 0, 0, 62, 424, 1, 0, 0,
		0, 64, 427, 1, 0, 0, 0, 66, 432, 1, 0, 0, 0, 68, 438, 1, 0, 0, 0, 70, 443,
		1, 0, 0, 0, 72, 449, 1, 0, 0, 0, 74, 455, 1, 0, 0, 0, 76, 460, 1, 0, 0,
		0, 78, 469, 1, 0, 0, 0, 80, 473, 1, 0, 0, 0, 82, 478, 1, 0, 0, 0, 84, 484,
		1, 0, 0, 0, 86, 489, 1, 0, 0, 0, 88, 496, 1, 0, 0, 0, 90, 506, 1, 0, 0,
		0, 92, 508, 1, 0, 0, 0, 94, 510, 1, 0, 0, 0, 96, 515, 1, 0, 0, 0, 98, 519,
		1, 0, 0, 0, 100, 523, 1, 0, 0, 0, 102, 527, 1, 0, 0, 0, 104, 533, 1, 0,
		0, 0, 106, 538, 1, 0, 0, 0, 108, 543, 1, 0, 0, 0, 110, 545, 1, 0, 0, 0,
		112, 549, 1, 0, 0, 0, 114, 554, 1, 0, 0, 0, 116, 560, 1, 0, 0, 0, 118,
		564, 1, 0, 0, 0, 120, 573, 1, 0, 0, 0, 122, 582, 1, 0, 0, 0, 124, 589,
		1, 0, 0, 0, 126, 594, 1, 0, 0, 0, 128, 600, 1, 0, 0, 0, 130, 608, 1, 0,
		0, 0, 132, 615, 1, 0, 0, 0, 134, 622, 1, 0, 0, 0, 136, 630, 1, 0, 0, 0,
		138, 635, 1, 0, 0, 0, 140, 640, 1, 0, 0, 0, 142, 647, 1, 0, 0, 0, 144,
		654, 1, 0, 0, 0, 146, 660, 1, 0, 0, 0, 148, 666, 1, 0, 0, 0, 150, 672,
		1, 0, 0, 0, 152, 674, 1, 0, 0, 0, 154, 677, 1, 0, 0, 0, 156, 680, 1, 0,
		0, 0, 158, 683, 1, 0, 0, 0, 160, 686, 1, 0, 0, 0, 162, 689, 1, 0, 0, 0,
		164, 691, 1, 0, 0, 0, 166, 693, 1, 0, 0, 0, 168, 695, 1, 0, 0, 0, 170,
		697, 1, 0, 0, 0, 172, 699, 1, 0, 0, 0, 174, 701, 1, 0, 0, 0, 176, 703,
		1, 0, 0, 0, 178, 705, 1, 0, 0, 0, 180, 708, 1, 0, 0, 0, 182, 717, 1, 0,
		0, 0, 184, 726, 1, 0, 0, 0, 186, 733, 1, 0, 0, 0, 188, 744, 1, 0, 0, 0,
		190, 746, 1, 0, 0, 0, 192, 750, 1, 0, 0, 0, 194, 757, 1, 0, 0, 0, 196,
		760, 1, 0, 0, 0, 198, 767, 1, 0, 0, 0, 200, 770, 1, 0, 0, 0, 202, 781,
		1, 0, 0, 0, 204, 785, 1, 0, 0, 0, 206, 787, 1, 0, 0, 0, 208, 789, 1, 0,
		0, 0, 210, 793, 1, 0, 0, 0, 212, 800, 1, 0, 0, 0, 214, 811, 1, 0, 0, 0,
		216, 819, 1, 0, 0, 0, 218, 827, 1, 0, 0, 0, 220, 833, 1, 0, 0, 0, 222,
		842, 1, 0, 0, 0, 224, 854, 1, 0, 0, 0, 226, 863, 1, 0, 0, 0, 228, 874,
		1, 0, 0, 0, 230, 884, 1, 0, 0, 0, 232, 893, 1, 0, 0, 0, 234, 902, 1, 0,
		0, 0, 236, 913, 1, 0, 0, 0, 238, 918, 1, 0, 0, 0, 240, 926, 1, 0, 0, 0,
		242, 934, 1, 0, 0, 0, 244, 939, 1, 0, 0, 0, 246, 945, 1, 0, 0, 0, 248,
		950, 1, 0, 0, 0, 250, 952, 1, 0, 0, 0, 252, 957, 1, 0, 0, 0, 254, 962,
		1, 0, 0, 0, 256, 966, 1, 0, 0, 0, 258, 968, 1, 0, 0, 0, 260, 973, 1, 0,
		0, 0, 262, 979, 1, 0, 0, 0, 264, 984, 1, 0, 0, 0, 266, 989, 1, 0, 0, 0,
		268, 270, 7, 0, 0, 0, 269, 268, 1, 0, 0, 0, 270, 271, 1, 0, 0, 0, 271,
		269, 1, 0, 0, 0, 271, 272, 1, 0, 0, 0, 272, 273, 1, 0, 0, 0, 273, 274,
		6, 0, 0, 0, 274, 15, 1, 0, 0, 0, 275, 276, 5, 47, 0, 0, 276, 277, 5, 47,
		0, 0, 277, 281, 1, 0, 0, 0, 278, 280, 8, 1, 0, 0, 279, 278, 1, 0, 0, 0,
		280, 283, 1, 0, 0, 0, 281, 279, 1, 0, 0, 0, 281, 282, 1, 0, 0, 0, 282,
		284, 1, 0, 0, 0, 283, 281, 1, 0, 0, 0, 284, 285, 6, 1, 1, 0, 285, 17, 1,
		0, 0, 0, 286, 288, 5, 13, 0, 0, 287, 286, 1, 0, 0, 0, 287, 288, 1, 0, 0,
		0, 288, 289, 1, 0, 0, 0, 289, 292, 5, 10, 0, 0, 290, 292, 5, 13, 0, 0,
		291, 287, 1, 0, 0, 0, 291, 290, 1, 0, 0, 0, 292, 296, 1, 0, 0, 0, 293,
		295, 7, 0, 0, 0, 294, 293, 1, 0, 0, 0, 295, 298, 1, 0, 0, 0, 296, 294,
		1, 0, 0, 0, 296, 297, 1, 0, 0, 0, 297, 299, 1, 0, 0, 0, 298, 296, 1, 0,
		0, 0, 299, 300, 6, 2, 2, 0, 300, 19, 1, 0, 0, 0, 301, 302, 5, 119, 0, 0,
		302, 303, 5, 104, 0, 0, 303, 304, 5, 101, 0, 0, 304, 305, 5, 110, 0, 0,
		305, 306, 1, 0, 0, 0, 306, 307, 6, 3, 3, 0, 307, 21, 1, 0, 0, 0, 308, 309,
		5, 116, 0, 0, 309, 310, 5, 105, 0, 0, 310, 311, 5, 116, 0, 0, 311, 312,
		5, 108, 0, 0, 312, 313, 5, 101, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315, 6,
		4, 4, 0, 315, 23, 1, 0, 0, 0, 316, 318, 3, 26, 6, 0, 317, 319, 3, 30, 8,
		0, 318, 317, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 25, 1, 0, 0, 0, 320,
		322, 7, 2, 0, 0, 321, 320, 1, 0, 0, 0, 322, 27, 1, 0, 0, 0, 323, 326, 7,
		3, 0, 0, 324, 326, 3, 26, 6, 0, 325, 323, 1, 0, 0, 0, 325, 324, 1, 0, 0,
		0, 326, 29, 1, 0, 0, 0, 327, 329, 3, 28, 7, 0, 328, 327, 1, 0, 0, 0, 329,
		330, 1, 0, 0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 31, 1,
		0, 0, 0, 332, 333, 5, 45, 0, 0, 333, 334, 5, 45, 0, 0, 334, 335, 5, 45,
		0, 0, 335, 336, 1, 0, 0, 0, 336, 337, 6, 9, 5, 0, 337, 33, 1, 0, 0, 0,
		338, 340, 3, 14, 0, 0, 339, 338, 1, 0, 0, 0, 339, 340, 1, 0, 0, 0, 340,
		341, 1, 0, 0, 0, 341, 343, 5, 58, 0, 0, 342, 344, 3, 14, 0, 0, 343, 342,
		1, 0, 0, 0, 343, 344, 1, 0, 0, 0, 344, 345, 1, 0, 0, 0, 345, 346, 6, 10,
		6, 0, 346, 35, 1, 0, 0, 0, 347, 348, 5, 35, 0, 0, 348, 349, 1, 0, 0, 0,
		349, 350, 6, 11, 7, 0, 350, 37, 1, 0, 0, 0, 351, 353, 3, 14, 0, 0, 352,
		351, 1, 0, 0, 0, 352, 353, 1, 0, 0, 0, 353, 354, 1, 0, 0, 0, 354, 356,
		5, 58, 0, 0, 355, 357, 3, 14, 0, 0, 356, 355, 1, 0, 0, 0, 356, 357, 1,
		0, 0, 0, 357, 358, 1, 0, 0, 0, 358, 359, 6, 12, 8, 0, 359, 360, 1, 0, 0,
		0, 360, 361, 6, 12, 9, 0, 361, 362, 6, 12, 10, 0, 362, 39, 1, 0, 0, 0,
		363, 364, 9, 0, 0, 0, 364, 365, 1, 0, 0, 0, 365, 366, 6, 13, 11, 0, 366,
		41, 1, 0, 0, 0, 367, 369, 3, 14, 0, 0, 368, 367, 1, 0, 0, 0, 368, 369,
		1, 0, 0, 0, 369, 370, 1, 0, 0, 0, 370, 372, 5, 58, 0, 0, 371, 373, 3, 14,
		0, 0, 372, 371, 1, 0, 0, 0, 372, 373, 1, 0, 0, 0, 373, 374, 1, 0, 0, 0,
		374, 375, 6, 14, 9, 0, 375, 43, 1, 0, 0, 0, 376, 378, 3, 14, 0, 0, 377,
		376, 1, 0, 0, 0, 377, 378, 1, 0, 0, 0, 378, 379, 1, 0, 0, 0, 379, 381,
		3, 24, 5, 0, 380, 382, 3, 14, 0, 0, 381, 380, 1, 0, 0, 0, 381, 382, 1,
		0, 0, 0, 382, 383, 1, 0, 0, 0, 383, 384, 6, 15, 12, 0, 384, 45, 1, 0, 0,
		0, 385, 386, 3, 18, 2, 0, 386, 387, 1, 0, 0, 0, 387, 388, 6, 16, 13, 0,
		388, 389, 6, 16, 11, 0, 389, 47, 1, 0, 0, 0, 390, 392, 8, 1, 0, 0, 391,
		390, 1, 0, 0, 0, 392, 393, 1, 0, 0, 0, 393, 391, 1, 0, 0, 0, 393, 394,
		1, 0, 0, 0, 394, 49, 1, 0, 0, 0, 395, 396, 3, 18, 2, 0, 396, 397, 1, 0,
		0, 0, 397, 398, 6, 18, 13, 0, 398, 399, 6, 18, 2, 0, 399, 400, 6, 18, 11,
		0, 400, 51, 1, 0, 0, 0, 401, 402, 3, 14, 0, 0, 402, 403, 1, 0, 0, 0, 403,
		404, 6, 19, 0, 0, 404, 53, 1, 0, 0, 0, 405, 406, 3, 18, 2, 0, 406, 407,
		1, 0, 0, 0, 407, 408, 6, 20, 13, 0, 408, 409, 6, 20, 2, 0, 409, 55, 1,
		0, 0, 0, 410, 411, 3, 16, 1, 0, 411, 412, 1, 0, 0, 0, 412, 413, 6, 21,
		14, 0, 413, 414, 6, 21, 1, 0, 414, 57, 1, 0, 0, 0, 415, 416, 5, 61, 0,
		0, 416, 417, 5, 61, 0, 0, 417, 418, 5, 61, 0, 0, 418, 419, 1, 0, 0, 0,
		419, 420, 6, 22, 11, 0, 420, 59, 1, 0, 0, 0, 421, 422, 5, 45, 0, 0, 422,
		423, 5, 62, 0, 0, 423, 61, 1, 0, 0, 0, 424, 425, 5, 61, 0, 0, 425, 426,
		5, 62, 0, 0, 426, 63, 1, 0, 0, 0, 427, 428, 5, 60, 0, 0, 428, 429, 5, 60,
		0, 0, 429, 430, 1, 0, 0, 0, 430, 431, 6, 25, 15, 0, 431, 65, 1, 0, 0, 0,
		432, 433, 5, 35, 0, 0, 433, 434, 1, 0, 0, 0, 434, 435, 6, 26, 16, 0, 435,
		436, 6, 26, 17, 0, 436, 437, 6, 26, 7, 0, 437, 67, 1, 0, 0, 0, 438, 439,
		5, 123, 0, 0, 439, 440, 1, 0, 0, 0, 440, 441, 6, 27, 18, 0, 441, 442, 6,
		27, 19, 0, 442, 69, 1, 0, 0, 0, 443, 444, 5, 92, 0, 0, 444, 445, 5, 91,
		0, 0, 445, 446, 1, 0, 0, 0, 446, 447, 6, 28, 20, 0, 447, 448, 6, 28, 18,
		0, 448, 71, 1, 0, 0, 0, 449, 450, 5, 92, 0, 0, 450, 451, 1, 0, 0, 0, 451,
		452, 6, 29, 0, 0, 452, 453, 6, 29, 18, 0, 453, 454, 6, 29, 21, 0, 454,
		73, 1, 0, 0, 0, 455, 456, 9, 0, 0, 0, 456, 457, 1, 0, 0, 0, 457, 458, 6,
		30, 20, 0, 458, 459, 6, 30, 18, 0, 459, 75, 1, 0, 0, 0, 460, 461, 3, 18,
		2, 0, 461, 462, 1, 0, 0, 0, 462, 463, 6, 31, 13, 0, 463, 464, 6, 31, 11,
		0, 464, 77, 1, 0, 0, 0, 465, 466, 5, 92, 0, 0, 466, 470, 5, 91, 0, 0, 467,
		468, 5, 92, 0, 0, 468, 470, 5, 93, 0, 0, 469, 465, 1, 0, 0, 0, 469, 467,
		1, 0, 0, 0, 470, 471, 1, 0, 0, 0, 471, 472, 6, 32, 20, 0, 472, 79, 1, 0,
		0, 0, 473, 474, 5, 92, 0, 0, 474, 475, 1, 0, 0, 0, 475, 476, 6, 33, 0,
		0, 476, 477, 6, 33, 21, 0, 477, 81, 1, 0, 0, 0, 478, 479, 3, 36, 11, 0,
		479, 480, 1, 0, 0, 0, 480, 481, 6, 34, 16, 0, 481, 482, 6, 34, 22, 0, 482,
		483, 6, 34, 7, 0, 483, 83, 1, 0, 0, 0, 484, 485, 5, 123, 0, 0, 485, 486,
		1, 0, 0, 0, 486, 487, 6, 35, 23, 0, 487, 488, 6, 35, 19, 0, 488, 85, 1,
		0, 0, 0, 489, 490, 5, 60, 0, 0, 490, 491, 5, 60, 0, 0, 491, 492, 1, 0,
		0, 0, 492, 493, 6, 36, 24, 0, 493, 494, 6, 36, 22, 0, 494, 495, 6, 36,
		15, 0, 495, 87, 1, 0, 0, 0, 496, 497, 3, 16, 1, 0, 497, 498, 1, 0, 0, 0,
		498, 499, 6, 37, 1, 0, 499, 89, 1, 0, 0, 0, 500, 502, 3, 92, 39, 0, 501,
		500, 1, 0, 0, 0, 502, 503, 1, 0, 0, 0, 503, 501, 1, 0, 0, 0, 503, 504,
		1, 0, 0, 0, 504, 507, 1, 0, 0, 0, 505, 507, 7, 4, 0, 0, 506, 501, 1, 0,
		0, 0, 506, 505, 1, 0, 0, 0, 507, 91, 1, 0, 0, 0, 508, 509, 8, 5, 0, 0,
		509, 93, 1, 0, 0, 0, 510, 511, 7, 6, 0, 0, 511, 512, 1, 0, 0, 0, 512, 513,
		6, 40, 20, 0, 513, 514, 6, 40, 11, 0, 514, 95, 1, 0, 0, 0, 515, 516, 9,
		0, 0, 0, 516, 517, 1, 0, 0, 0, 517, 518, 6, 41, 11, 0, 518, 97, 1, 0, 0,
		0, 519, 520, 3, 14, 0, 0, 520, 521, 1, 0, 0, 0, 521, 522, 6, 42, 0, 0,
		522, 99, 1, 0, 0, 0, 523, 524, 3, 16, 1, 0, 524, 525, 1, 0, 0, 0, 525,
		526, 6, 43, 1, 0, 526, 101, 1, 0, 0, 0, 527, 528, 5, 60, 0, 0, 528, 529,
		5, 60, 0, 0, 529, 530, 1, 0, 0, 0, 530, 531, 6, 44, 24, 0, 531, 532, 6,
		44, 15, 0, 532, 103, 1, 0, 0, 0, 533, 534, 5, 35, 0, 0, 534, 535, 1, 0,
		0, 0, 535, 536, 6, 45, 16, 0, 536, 537, 6, 45, 7, 0, 537, 105, 1, 0, 0,
		0, 538, 539, 3, 18, 2, 0, 539, 540, 1, 0, 0, 0, 540, 541, 6, 46, 13, 0,
		541, 542, 6, 46, 11, 0, 542, 107, 1, 0, 0, 0, 543, 544, 9, 0, 0, 0, 544,
		109, 1, 0, 0, 0, 545, 546, 3, 14, 0, 0, 546, 547, 1, 0, 0, 0, 547, 548,
		6, 48, 0, 0, 548, 111, 1, 0, 0, 0, 549, 550, 3, 36, 11, 0, 550, 551, 1,
		0, 0, 0, 551, 552, 6, 49, 16, 0, 552, 113, 1, 0, 0, 0, 553, 555, 8, 7,
		0, 0, 554, 553, 1, 0, 0, 0, 555, 556, 1, 0, 0, 0, 556, 554, 1, 0, 0, 0,
		556, 557, 1, 0, 0, 0, 557, 558, 1, 0, 0, 0, 558, 559, 6, 50, 11, 0, 559,
		115, 1, 0, 0, 0, 560, 561, 3, 14, 0, 0, 561, 562, 1, 0, 0, 0, 562, 563,
		6, 51, 0, 0, 563, 117, 1, 0, 0, 0, 564, 565, 5, 97, 0, 0, 565, 566, 5,
		108, 0, 0, 566, 567, 5, 119, 0, 0, 567, 568, 5, 97, 0, 0, 568, 569, 5,
		121, 0, 0, 569, 570, 5, 115, 0, 0, 570, 571, 1, 0, 0, 0, 571, 572, 4, 52,
		0, 0, 572, 119, 1, 0, 0, 0, 573, 574, 5, 111, 0, 0, 574, 575, 5, 110, 0,
		0, 575, 576, 5, 99, 0, 0, 576, 577, 5, 101, 0, 0, 577, 578, 1, 0, 0, 0,
		578, 579, 4, 53, 1, 0, 579, 580, 1, 0, 0, 0, 580, 581, 6, 53, 25, 0, 581,
		121, 1, 0, 0, 0, 582, 583, 5, 105, 0, 0, 583, 584, 5, 102, 0, 0, 584, 585,
		1, 0, 0, 0, 585, 586, 4, 54, 2, 0, 586, 587, 1, 0, 0, 0, 587, 588, 6, 54,
		26, 0, 588, 123, 1, 0, 0, 0, 589, 590, 5, 116, 0, 0, 590, 591, 5, 114,
		0, 0, 591, 592, 5, 117, 0, 0, 592, 593, 5, 101, 0, 0, 593, 125, 1, 0, 0,
		0, 594, 595, 5, 102, 0, 0, 595, 596, 5, 97, 0, 0, 596, 597, 5, 108, 0,
		0, 597, 598, 5, 115, 0, 0, 598, 599, 5, 101, 0, 0, 599, 127, 1, 0, 0, 0,
		600, 601, 5, 110, 0, 0, 601, 602, 5, 117, 0, 0, 602, 603, 5, 108, 0, 0,
		603, 604, 5, 108, 0, 0, 604, 129, 1, 0, 0, 0, 605, 609, 5, 61, 0, 0, 606,
		607, 5, 116, 0, 0, 607, 609, 5, 111, 0, 0, 608, 605, 1, 0, 0, 0, 608, 606,
		1, 0, 0, 0, 609, 131, 1, 0, 0, 0, 610, 611, 5, 60, 0, 0, 611, 616, 5, 61,
		0, 0, 612, 613, 5, 108, 0, 0, 613, 614, 5, 116, 0, 0, 614, 616, 5, 101,
		0, 0, 615, 610, 1, 0, 0, 0, 615, 612, 1, 0, 0, 0, 616, 133, 1, 0, 0, 0,
		617, 618, 5, 62, 0, 0, 618, 623, 5, 61, 0, 0, 619, 620, 5, 103, 0, 0, 620,
		621, 5, 116, 0, 0, 621, 623, 5, 101, 0, 0, 622, 617, 1, 0, 0, 0, 622, 619,
		1, 0, 0, 0, 623, 135, 1, 0, 0, 0, 624, 625, 5, 61, 0, 0, 625, 631, 5, 61,
		0, 0, 626, 627, 5, 105, 0, 0, 627, 631, 5, 115, 0, 0, 628, 629, 5, 101,
		0, 0, 629, 631, 5, 113, 0, 0, 630, 624, 1, 0, 0, 0, 630, 626, 1, 0, 0,
		0, 630, 628, 1, 0, 0, 0, 631, 137, 1, 0, 0, 0, 632, 636, 5, 60, 0, 0, 633,
		634, 5, 108, 0, 0, 634, 636, 5, 116, 0, 0, 635, 632, 1, 0, 0, 0, 635, 633,
		1, 0, 0, 0, 636, 139, 1, 0, 0, 0, 637, 641, 5, 62, 0, 0, 638, 639, 5, 103,
		0, 0, 639, 641, 5, 116, 0, 0, 640, 637, 1, 0, 0, 0, 640, 638, 1, 0, 0,
		0, 641, 141, 1, 0, 0, 0, 642, 643, 5, 33, 0, 0, 643, 648, 5, 61, 0, 0,
		644, 645, 5, 110, 0, 0, 645, 646, 5, 101, 0, 0, 646, 648, 5, 113, 0, 0,
		647, 642, 1, 0, 0, 0, 647, 644, 1, 0, 0, 0, 648, 143, 1, 0, 0, 0, 649,
		650, 5, 97, 0, 0, 650, 651, 5, 110, 0, 0, 651, 655, 5, 100, 0, 0, 652,
		653, 5, 38, 0, 0, 653, 655, 5, 38, 0, 0, 654, 649, 1, 0, 0, 0, 654, 652,
		1, 0, 0, 0, 655, 145, 1, 0, 0, 0, 656, 657, 5, 111, 0, 0, 657, 661, 5,
		114, 0, 0, 658, 659, 5, 124, 0, 0, 659, 661, 5, 124, 0, 0, 660, 656, 1,
		0, 0, 0, 660, 658, 1, 0, 0, 0, 661, 147, 1, 0, 0, 0, 662, 663, 5, 120,
		0, 0, 663, 664, 5, 111, 0, 0, 664, 667, 5, 114, 0, 0, 665, 667, 5, 94,
		0, 0, 666, 662, 1, 0, 0, 0, 666, 665, 1, 0, 0, 0, 667, 149, 1, 0, 0, 0,
		668, 669, 5, 110, 0, 0, 669, 670, 5, 111, 0, 0, 670, 673, 5, 116, 0, 0,
		671, 673, 5, 33, 0, 0, 672, 668, 1, 0, 0, 0, 672, 671, 1, 0, 0, 0, 673,
		151, 1, 0, 0, 0, 674, 675, 5, 43, 0, 0, 675, 676, 5, 61, 0, 0, 676, 153,
		1, 0, 0, 0, 677, 678, 5, 45, 0, 0, 678, 679, 5, 61, 0, 0, 679, 155, 1,
		0, 0, 0, 680, 681, 5, 42, 0, 0, 681, 682, 5, 61, 0, 0, 682, 157, 1, 0,
		0, 0, 683, 684, 5, 37, 0, 0, 684, 685, 5, 61, 0, 0, 685, 159, 1, 0, 0,
		0, 686, 687, 5, 47, 0, 0, 687, 688, 5, 61, 0, 0, 688, 161, 1, 0, 0, 0,
		689, 690, 5, 43, 0, 0, 690, 163, 1, 0, 0, 0, 691, 692, 5, 45, 0, 0, 692,
		165, 1, 0, 0, 0, 693, 694, 5, 42, 0, 0, 694, 167, 1, 0, 0, 0, 695, 696,
		5, 47, 0, 0, 696, 169, 1, 0, 0, 0, 697, 698, 5, 37, 0, 0, 698, 171, 1,
		0, 0, 0, 699, 700, 5, 40, 0, 0, 700, 173, 1, 0, 0, 0, 701, 702, 5, 41,
		0, 0, 702, 175, 1, 0, 0, 0, 703, 704, 5, 44, 0, 0, 704, 177, 1, 0, 0, 0,
		705, 706, 5, 97, 0, 0, 706, 707, 5, 115, 0, 0, 707, 179, 1, 0, 0, 0, 708,
		709, 5, 115, 0, 0, 709, 710, 5, 116, 0, 0, 710, 711, 5, 114, 0, 0, 711,
		712, 5, 105, 0, 0, 712, 713, 5, 110, 0, 0, 713, 714, 5, 103, 0, 0, 714,
		715, 1, 0, 0, 0, 715, 716, 6, 83, 27, 0, 716, 181, 1, 0, 0, 0, 717, 718,
		5, 110, 0, 0, 718, 719, 5, 117, 0, 0, 719, 720, 5, 109, 0, 0, 720, 721,
		5, 98, 0, 0, 721, 722, 5, 101, 0, 0, 722, 723, 5, 114, 0, 0, 723, 724,
		1, 0, 0, 0, 724, 725, 6, 84, 27, 0, 725, 183, 1, 0, 0, 0, 726, 727, 5,
		98, 0, 0, 727, 728, 5, 111, 0, 0, 728, 729, 5, 111, 0, 0, 729, 730, 5,
		108, 0, 0, 730, 731, 1, 0, 0, 0, 731, 732, 6, 85, 27, 0, 732, 185, 1, 0,
		0, 0, 733, 739, 5, 34, 0, 0, 734, 738, 8, 8, 0, 0, 735, 736, 5, 92, 0,
		0, 736, 738, 7, 9, 0, 0, 737, 734, 1, 0, 0, 0, 737, 735, 1, 0, 0, 0, 738,
		741, 1, 0, 0, 0, 739, 737, 1, 0, 0, 0, 739, 740, 1, 0, 0, 0, 740, 742,
		1, 0, 0, 0, 741, 739, 1, 0, 0, 0, 742, 743, 5, 34, 0, 0, 743, 187, 1, 0,
		0, 0, 744, 745, 3, 24, 5, 0, 745, 189, 1, 0, 0, 0, 746, 747, 5, 125, 0,
		0, 747, 748, 1, 0, 0, 0, 748, 749, 6, 88, 11, 0, 749, 191, 1, 0, 0, 0,
		750, 751, 5, 62, 0, 0, 751, 752, 5, 62, 0, 0, 752, 753, 1, 0, 0, 0, 753,
		754, 6, 89, 28, 0, 754, 755, 6, 89, 11, 0, 755, 756, 6, 89, 11, 0, 756,
		193, 1, 0, 0, 0, 757, 758, 5, 36, 0, 0, 758, 759, 3, 24, 5, 0, 759, 195,
		1, 0, 0, 0, 760, 761, 5, 46, 0, 0, 761, 197, 1, 0, 0, 0, 762, 768, 3, 202,
		94, 0, 763, 764, 3, 202, 94, 0, 764, 765, 5, 46, 0, 0, 765, 766, 3, 202,
		94, 0, 766, 768, 1, 0, 0, 0, 767, 762, 1, 0, 0, 0, 767, 763, 1, 0, 0, 0,
		768, 199, 1, 0, 0, 0, 769, 771, 7, 1, 0, 0, 770, 769, 1, 0, 0, 0, 771,
		772, 1, 0, 0, 0, 772, 770, 1, 0, 0, 0, 772, 773, 1, 0, 0, 0, 773, 774,
		1, 0, 0, 0, 774, 775, 4, 93, 3, 0, 775, 776, 6, 93, 29, 0, 776, 777, 1,
		0, 0, 0, 777, 778, 6, 93, 13, 0, 778, 779, 6, 93, 11, 0, 779, 201, 1, 0,
		0, 0, 780, 782, 3, 204, 95, 0, 781, 780, 1, 0, 0, 0, 782, 783, 1, 0, 0,
		0, 783, 781, 1, 0, 0, 0, 783, 784, 1, 0, 0, 0, 784, 203, 1, 0, 0, 0, 785,
		786, 7, 10, 0, 0, 786, 205, 1, 0, 0, 0, 787, 788, 3, 18, 2, 0, 788, 207,
		1, 0, 0, 0, 789, 790, 3, 14, 0, 0, 790, 791, 1, 0, 0, 0, 791, 792, 6, 97,
		0, 0, 792, 209, 1, 0, 0, 0, 793, 794, 5, 105, 0, 0, 794, 795, 5, 102, 0,
		0, 795, 796, 1, 0, 0, 0, 796, 797, 7, 11, 0, 0, 797, 798, 1, 0, 0, 0, 798,
		799, 6, 98, 19, 0, 799, 211, 1, 0, 0, 0, 800, 801, 5, 101, 0, 0, 801, 802,
		5, 108, 0, 0, 802, 803, 5, 115, 0, 0, 803, 804, 5, 101, 0, 0, 804, 805,
		5, 105, 0, 0, 805, 806, 5, 102, 0, 0, 806, 807, 1, 0, 0, 0, 807, 808, 7,
		11, 0, 0, 808, 809, 1, 0, 0, 0, 809, 810, 6, 99, 19, 0, 810, 213, 1, 0,
		0, 0, 811, 812, 5, 101, 0, 0, 812, 813, 5, 108, 0, 0, 813, 814, 5, 115,
		0, 0, 814, 815, 5, 101, 0, 0, 815, 817, 1, 0, 0, 0, 816, 818, 7, 11, 0,
		0, 817, 816, 1, 0, 0, 0, 817, 818, 1, 0, 0, 0, 818, 215, 1, 0, 0, 0, 819,
		820, 5, 115, 0, 0, 820, 821, 5, 101, 0, 0, 821, 822, 5, 116, 0, 0, 822,
		823, 1, 0, 0, 0, 823, 824, 7, 11, 0, 0, 824, 825, 1, 0, 0, 0, 825, 826,
		6, 101, 19, 0, 826, 217, 1, 0, 0, 0, 827, 828, 5, 101, 0, 0, 828, 829,
		5, 110, 0, 0, 829, 830, 5, 100, 0, 0, 830, 831, 5, 105, 0, 0, 831, 832,
		5, 102, 0, 0, 832, 219, 1, 0, 0, 0, 833, 834, 5, 99, 0, 0, 834, 835, 5,
		97, 0, 0, 835, 836, 5, 108, 0, 0, 836, 837, 5, 108, 0, 0, 837, 838, 1,
		0, 0, 0, 838, 839, 7, 11, 0, 0, 839, 840, 1, 0, 0, 0, 840, 841, 6, 103,
		19, 0, 841, 221, 1, 0, 0, 0, 842, 843, 5, 100, 0, 0, 843, 844, 5, 101,
		0, 0, 844, 845, 5, 99, 0, 0, 845, 846, 5, 108, 0, 0, 846, 847, 5, 97, 0,
		0, 847, 848, 5, 114, 0, 0, 848, 849, 5, 101, 0, 0, 849, 850, 1, 0, 0, 0,
		850, 851, 7, 11, 0, 0, 851, 852, 1, 0, 0, 0, 852, 853, 6, 104, 19, 0, 853,
		223, 1, 0, 0, 0, 854, 855, 5, 106, 0, 0, 855, 856, 5, 117, 0, 0, 856, 857,
		5, 109, 0, 0, 857, 858, 5, 112, 0, 0, 858, 859, 1, 0, 0, 0, 859, 860, 7,
		11, 0, 0, 860, 861, 1, 0, 0, 0, 861, 862, 6, 105, 30, 0, 862, 225, 1, 0,
		0, 0, 863, 864, 5, 100, 0, 0, 864, 865, 5, 101, 0, 0, 865, 866, 5, 116,
		0, 0, 866, 867, 5, 111, 0, 0, 867, 868, 5, 117, 0, 0, 868, 869, 5, 114,
		0, 0, 869, 870, 1, 0, 0, 0, 870, 871, 7, 11, 0, 0, 871, 872, 1, 0, 0, 0,
		872, 873, 6, 106, 30, 0, 873, 227, 1, 0, 0, 0, 874, 875, 5, 114, 0, 0,
		875, 876, 5, 101, 0, 0, 876, 877, 5, 116, 0, 0, 877, 878, 5, 117, 0, 0,
		878, 879, 5, 114, 0, 0, 879, 880, 5, 110, 0, 0, 880, 882, 1, 0, 0, 0, 881,
		883, 7, 11, 0, 0, 882, 881, 1, 0, 0, 0, 882, 883, 1, 0, 0, 0, 883, 229,
		1, 0, 0, 0, 884, 885, 5, 101, 0, 0, 885, 886, 5, 110, 0, 0, 886, 887, 5,
		117, 0, 0, 887, 888, 5, 109, 0, 0, 888, 889, 1, 0, 0, 0, 889, 890, 7, 11,
		0, 0, 890, 891, 1, 0, 0, 0, 891, 892, 6, 108, 31, 0, 892, 231, 1, 0, 0,
		0, 893, 894, 5, 99, 0, 0, 894, 895, 5, 97, 0, 0, 895, 896, 5, 115, 0, 0,
		896, 897, 5, 101, 0, 0, 897, 898, 1, 0, 0, 0, 898, 899, 7, 11, 0, 0, 899,
		900, 1, 0, 0, 0, 900, 901, 6, 109, 19, 0, 901, 233, 1, 0, 0, 0, 902, 903,
		5, 101, 0, 0, 903, 904, 5, 110, 0, 0, 904, 905, 5, 100, 0, 0, 905, 906,
		5, 101, 0, 0, 906, 907, 5, 110, 0, 0, 907, 908, 5, 117, 0, 0, 908, 909,
		5, 109, 0, 0, 909, 911, 1, 0, 0, 0, 910, 912, 7, 11, 0, 0, 911, 910, 1,
		0, 0, 0, 911, 912, 1, 0, 0, 0, 912, 235, 1, 0, 0, 0, 913, 914, 5, 111,
		0, 0, 914, 915, 5, 110, 0, 0, 915, 916, 5, 99, 0, 0, 916, 917, 5, 101,
		0, 0, 917, 237, 1, 0, 0, 0, 918, 919, 5, 101, 0, 0, 919, 920, 5, 110, 0,
		0, 920, 921, 5, 100, 0, 0, 921, 922, 5, 111, 0, 0, 922, 923, 5, 110, 0,
		0, 923, 924, 5, 99, 0, 0, 924, 925, 5, 101, 0, 0, 925, 239, 1, 0, 0, 0,
		926, 927, 5, 108, 0, 0, 927, 928, 5, 111, 0, 0, 928, 929, 5, 99, 0, 0,
		929, 930, 5, 97, 0, 0, 930, 931, 5, 108, 0, 0, 931, 932, 1, 0, 0, 0, 932,
		933, 7, 11, 0, 0, 933, 241, 1, 0, 0, 0, 934, 935, 5, 62, 0, 0, 935, 936,
		5, 62, 0, 0, 936, 937, 1, 0, 0, 0, 937, 938, 6, 114, 11, 0, 938, 243, 1,
		0, 0, 0, 939, 940, 5, 123, 0, 0, 940, 941, 1, 0, 0, 0, 941, 942, 6, 115,
		32, 0, 942, 943, 6, 115, 33, 0, 943, 944, 6, 115, 19, 0, 944, 245, 1, 0,
		0, 0, 945, 946, 9, 0, 0, 0, 946, 947, 1, 0, 0, 0, 947, 948, 6, 116, 34,
		0, 948, 949, 6, 116, 33, 0, 949, 247, 1, 0, 0, 0, 950, 951, 3, 18, 2, 0,
		951, 249, 1, 0, 0, 0, 952, 953, 5, 62, 0, 0, 953, 954, 5, 62, 0, 0, 954,
		955, 1, 0, 0, 0, 955, 956, 6, 118, 11, 0, 956, 251, 1, 0, 0, 0, 957, 958,
		5, 123, 0, 0, 958, 959, 1, 0, 0, 0, 959, 960, 6, 119, 19, 0, 960, 253,
		1, 0, 0, 0, 961, 963, 8, 12, 0, 0, 962, 961, 1, 0, 0, 0, 963, 964, 1, 0,
		0, 0, 964, 962, 1, 0, 0, 0, 964, 965, 1, 0, 0, 0, 965, 255, 1, 0, 0, 0,
		966, 967, 3, 18, 2, 0, 967, 257, 1, 0, 0, 0, 968, 969, 3, 24, 5, 0, 969,
		970, 1, 0, 0, 0, 970, 971, 6, 122, 12, 0, 971, 972, 6, 122, 11, 0, 972,
		259, 1, 0, 0, 0, 973, 974, 5, 62, 0, 0, 974, 975, 5, 62, 0, 0, 975, 976,
		1, 0, 0, 0, 976, 977, 6, 123, 28, 0, 977, 978, 6, 123, 11, 0, 978, 261,
		1, 0, 0, 0, 979, 980, 3, 24, 5, 0, 980, 981, 1, 0, 0, 0, 981, 982, 6, 124,
		12, 0, 982, 983, 6, 124, 11, 0, 983, 263, 1, 0, 0, 0, 984, 985, 3, 68,
		27, 0, 985, 986, 1, 0, 0, 0, 986, 987, 6, 125, 23, 0, 987, 988, 6, 125,
		10, 0, 988, 265, 1, 0, 0, 0, 989, 990, 5, 62, 0, 0, 990, 991, 5, 62, 0,
		0, 991, 992, 1, 0, 0, 0, 992, 993, 6, 126, 28, 0, 993, 994, 6, 126, 11,
		0, 994, 267, 1, 0, 0, 0, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
		13, 271, 281, 287, 291, 296, 318, 321, 325, 330, 339, 343, 352, 356, 368,
		372, 377, 381, 393, 469, 503, 506, 556, 608, 615, 622, 630, 635, 640, 647,
		654, 660, 666, 672, 737, 739, 767, 772, 783, 817, 882, 911, 964, 35, 0,
		1, 0, 0, 3, 0, 0, 2, 0, 5, 1, 0, 5, 2, 0, 5, 4, 0, 5, 3, 0, 5, 8, 0, 1,
		12, 0, 7, 11, 0, 2, 9, 0, 4, 0, 0, 7, 9, 0, 7, 6, 0, 7, 5, 0, 5, 10, 0,
		7, 12, 0, 5, 7, 0, 5, 5, 0, 5, 9, 0, 7, 24, 0, 5, 6, 0, 2, 7, 0, 7, 20,
		0, 7, 19, 0, 7, 82, 0, 7, 69, 0, 7, 62, 0, 7, 85, 0, 1, 93, 1, 5, 13, 0,
		5, 12, 0, 7, 88, 0, 2, 11, 0, 7, 89, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// YarnSpinnerLexerInit initializes any static state used to implement YarnSpinnerLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewYarnSpinnerLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func YarnSpinnerLexerInit() {
	staticData := &YarnSpinnerLexerLexerStaticData
	staticData.once.Do(yarnspinnerlexerLexerInit)
}

// NewYarnSpinnerLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewYarnSpinnerLexer(input antlr.CharStream) *YarnSpinnerLexer {
	YarnSpinnerLexerInit()
	l := new(YarnSpinnerLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &YarnSpinnerLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "YarnSpinnerLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// YarnSpinnerLexer tokens.
const (
	YarnSpinnerLexerINDENT                               = 1
	YarnSpinnerLexerDEDENT                               = 2
	YarnSpinnerLexerBLANK_LINE_FOLLOWING_OPTION          = 3
	YarnSpinnerLexerWS                                   = 4
	YarnSpinnerLexerCOMMENT                              = 5
	YarnSpinnerLexerNEWLINE                              = 6
	YarnSpinnerLexerHEADER_WHEN                          = 7
	YarnSpinnerLexerHEADER_TITLE                         = 8
	YarnSpinnerLexerID                                   = 9
	YarnSpinnerLexerBODY_START                           = 10
	YarnSpinnerLexerHEADER_DELIMITER                     = 11
	YarnSpinnerLexerHASHTAG                              = 12
	YarnSpinnerLexerHEADER_WHEN_UNKNOWN                  = 13
	YarnSpinnerLexerREST_OF_LINE                         = 14
	YarnSpinnerLexerBODY_WS                              = 15
	YarnSpinnerLexerBODY_END                             = 16
	YarnSpinnerLexerSHORTCUT_ARROW                       = 17
	YarnSpinnerLexerLINE_GROUP_ARROW                     = 18
	YarnSpinnerLexerCOMMAND_START                        = 19
	YarnSpinnerLexerEXPRESSION_START                     = 20
	YarnSpinnerLexerESCAPED_ANY                          = 21
	YarnSpinnerLexerTEXT_ESCAPE                          = 22
	YarnSpinnerLexerTEXT_COMMENT                         = 23
	YarnSpinnerLexerTEXT                                 = 24
	YarnSpinnerLexerUNESCAPABLE_CHARACTER                = 25
	YarnSpinnerLexerTEXT_COMMANDHASHTAG_WS               = 26
	YarnSpinnerLexerTEXT_COMMANDHASHTAG_COMMENT          = 27
	YarnSpinnerLexerTEXT_COMMANDHASHTAG_ERROR            = 28
	YarnSpinnerLexerHASHTAG_WS                           = 29
	YarnSpinnerLexerHASHTAG_TEXT                         = 30
	YarnSpinnerLexerEXPR_WS                              = 31
	YarnSpinnerLexerEXPRESSION_WHEN_ALWAYS               = 32
	YarnSpinnerLexerKEYWORD_TRUE                         = 33
	YarnSpinnerLexerKEYWORD_FALSE                        = 34
	YarnSpinnerLexerKEYWORD_NULL                         = 35
	YarnSpinnerLexerOPERATOR_ASSIGNMENT                  = 36
	YarnSpinnerLexerOPERATOR_LOGICAL_LESS_THAN_EQUALS    = 37
	YarnSpinnerLexerOPERATOR_LOGICAL_GREATER_THAN_EQUALS = 38
	YarnSpinnerLexerOPERATOR_LOGICAL_EQUALS              = 39
	YarnSpinnerLexerOPERATOR_LOGICAL_LESS                = 40
	YarnSpinnerLexerOPERATOR_LOGICAL_GREATER             = 41
	YarnSpinnerLexerOPERATOR_LOGICAL_NOT_EQUALS          = 42
	YarnSpinnerLexerOPERATOR_LOGICAL_AND                 = 43
	YarnSpinnerLexerOPERATOR_LOGICAL_OR                  = 44
	YarnSpinnerLexerOPERATOR_LOGICAL_XOR                 = 45
	YarnSpinnerLexerOPERATOR_LOGICAL_NOT                 = 46
	YarnSpinnerLexerOPERATOR_MATHS_ADDITION_EQUALS       = 47
	YarnSpinnerLexerOPERATOR_MATHS_SUBTRACTION_EQUALS    = 48
	YarnSpinnerLexerOPERATOR_MATHS_MULTIPLICATION_EQUALS = 49
	YarnSpinnerLexerOPERATOR_MATHS_MODULUS_EQUALS        = 50
	YarnSpinnerLexerOPERATOR_MATHS_DIVISION_EQUALS       = 51
	YarnSpinnerLexerOPERATOR_MATHS_ADDITION              = 52
	YarnSpinnerLexerOPERATOR_MATHS_SUBTRACTION           = 53
	YarnSpinnerLexerOPERATOR_MATHS_MULTIPLICATION        = 54
	YarnSpinnerLexerOPERATOR_MATHS_DIVISION              = 55
	YarnSpinnerLexerOPERATOR_MATHS_MODULUS               = 56
	YarnSpinnerLexerLPAREN                               = 57
	YarnSpinnerLexerRPAREN                               = 58
	YarnSpinnerLexerCOMMA                                = 59
	YarnSpinnerLexerEXPRESSION_AS                        = 60
	YarnSpinnerLexerSTRING                               = 61
	YarnSpinnerLexerFUNC_ID                              = 62
	YarnSpinnerLexerEXPRESSION_END                       = 63
	YarnSpinnerLexerVAR_ID                               = 64
	YarnSpinnerLexerDOT                                  = 65
	YarnSpinnerLexerNUMBER                               = 66
	YarnSpinnerLexerCOMMAND_NEWLINE                      = 67
	YarnSpinnerLexerCOMMAND_WS                           = 68
	YarnSpinnerLexerCOMMAND_IF                           = 69
	YarnSpinnerLexerCOMMAND_ELSEIF                       = 70
	YarnSpinnerLexerCOMMAND_ELSE                         = 71
	YarnSpinnerLexerCOMMAND_SET                          = 72
	YarnSpinnerLexerCOMMAND_ENDIF                        = 73
	YarnSpinnerLexerCOMMAND_CALL                         = 74
	YarnSpinnerLexerCOMMAND_DECLARE                      = 75
	YarnSpinnerLexerCOMMAND_JUMP                         = 76
	YarnSpinnerLexerCOMMAND_DETOUR                       = 77
	YarnSpinnerLexerCOMMAND_RETURN                       = 78
	YarnSpinnerLexerCOMMAND_ENUM                         = 79
	YarnSpinnerLexerCOMMAND_CASE                         = 80
	YarnSpinnerLexerCOMMAND_ENDENUM                      = 81
	YarnSpinnerLexerCOMMAND_ONCE                         = 82
	YarnSpinnerLexerCOMMAND_ENDONCE                      = 83
	YarnSpinnerLexerCOMMAND_LOCAL                        = 84
	YarnSpinnerLexerCOMMAND_END                          = 85
	YarnSpinnerLexerCOMMAND_TEXT_NEWLINE                 = 86
	YarnSpinnerLexerCOMMAND_TEXT_END                     = 87
	YarnSpinnerLexerCOMMAND_EXPRESSION_START             = 88
	YarnSpinnerLexerCOMMAND_TEXT                         = 89
	YarnSpinnerLexerCOMMAND_ID_NEWLINE                   = 90
	YarnSpinnerLexerTYPE_STRING                          = 91
	YarnSpinnerLexerTYPE_NUMBER                          = 92
	YarnSpinnerLexerTYPE_BOOL                            = 93
)

// YarnSpinnerLexer escapedChannels.
const (
	YarnSpinnerLexerWHITESPACE = 2
	YarnSpinnerLexerCOMMENTS   = 3
)

// YarnSpinnerLexer modes.
const (
	YarnSpinnerLexerHeaderWhenMode = iota + 1
	YarnSpinnerLexerHeaderTitleMode
	YarnSpinnerLexerHeaderMode
	YarnSpinnerLexerBodyMode
	YarnSpinnerLexerTextMode
	YarnSpinnerLexerTextEscapedMode
	YarnSpinnerLexerTextCommandOrHashtagMode
	YarnSpinnerLexerHashtagMode
	YarnSpinnerLexerExpressionMode
	YarnSpinnerLexerCommandMode
	YarnSpinnerLexerCommandTextMode
	YarnSpinnerLexerCommandIDMode
	YarnSpinnerLexerCommandIDOrExpressionMode
)

func (l *YarnSpinnerLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 12:
		l.HEADER_WHEN_DELIMITER_Action(localctx, actionIndex)

	case 93:
		l.EXPRESSION_NEWLINE_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *YarnSpinnerLexer) HEADER_WHEN_DELIMITER_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		l.inWhenClause = (true)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *YarnSpinnerLexer) EXPRESSION_NEWLINE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 1:
		l.inWhenClause = (false)

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}

func (l *YarnSpinnerLexer) Sempred(localctx antlr.RuleContext, ruleIndex, predIndex int) bool {
	switch ruleIndex {
	case 52:
		return l.EXPRESSION_WHEN_ALWAYS_Sempred(localctx, predIndex)

	case 53:
		return l.EXPRESSION_WHEN_ONCE_Sempred(localctx, predIndex)

	case 54:
		return l.EXPRESSION_WHEN_IF_Sempred(localctx, predIndex)

	case 93:
		return l.EXPRESSION_NEWLINE_Sempred(localctx, predIndex)

	default:
		panic("No registered predicate for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *YarnSpinnerLexer) EXPRESSION_WHEN_ALWAYS_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 0:
		return l.inWhenClause

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (l *YarnSpinnerLexer) EXPRESSION_WHEN_ONCE_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 1:
		return l.inWhenClause

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (l *YarnSpinnerLexer) EXPRESSION_WHEN_IF_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 2:
		return l.inWhenClause

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}

func (l *YarnSpinnerLexer) EXPRESSION_NEWLINE_Sempred(localctx antlr.RuleContext, predIndex int) bool {
	switch predIndex {
	case 3:
		return l.inWhenClause

	default:
		panic("No predicate with index: " + fmt.Sprint(predIndex))
	}
}
