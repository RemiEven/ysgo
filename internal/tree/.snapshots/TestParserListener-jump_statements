(*tree.Dialogue)({
  Nodes: ([]tree.Node) (len=4) {
    (tree.Node) {
      Headers: (map[string]string) (len=1) {
        (string) (len=5) "title": (string) (len=5) "Start"
      },
      Statements: ([]*tree.Statement) (len=2) {
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)({
            Text: (*tree.LineFormattedText)({
              Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                (*tree.LineFormattedTextElement)({
                  Text: (string) (len=55) "Companion: Hi there! What do you feel like doing today?",
                  Expression: (*variable.Expression)(<nil>)
                })
              }
            }),
            Condition: (*variable.Expression)(<nil>),
            Tags: ([]string) <nil>
          }),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        }),
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)(<nil>),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)({
            Options: ([]*tree.ShortcutOption) (len=2) {
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=30) "Player: I want to go swimming.",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=2) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=35) "Companion: Okay, let's go swimming.",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  }),
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)(<nil>),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)({
                      Expression: (*variable.Expression)({
                        Value: (*variable.Value)({
                          Number: (*float64)(<nil>),
                          Boolean: (*bool)(<nil>),
                          String: (*string)((len=8) "Swimming")
                        }),
                        VariableID: (*string)(<nil>),
                        FunctionCall: (*variable.FunctionCall)(<nil>),
                        NegativeExpression: (*variable.Expression)(<nil>),
                        NotExpression: (*variable.Expression)(<nil>),
                        LeftOperand: (*variable.Expression)(<nil>),
                        RightOperand: (*variable.Expression)(<nil>),
                        Operator: (*int)(<nil>)
                      }),
                      Detour: (bool) false
                    }),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              }),
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=32) "Player: I'd prefer to go hiking.",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=2) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=38) "Companion: Cool, we'll go hiking then.",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  }),
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)(<nil>),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)({
                      Expression: (*variable.Expression)({
                        Value: (*variable.Value)({
                          Number: (*float64)(<nil>),
                          Boolean: (*bool)(<nil>),
                          String: (*string)((len=6) "Hiking")
                        }),
                        VariableID: (*string)(<nil>),
                        FunctionCall: (*variable.FunctionCall)(<nil>),
                        NegativeExpression: (*variable.Expression)(<nil>),
                        NotExpression: (*variable.Expression)(<nil>),
                        LeftOperand: (*variable.Expression)(<nil>),
                        RightOperand: (*variable.Expression)(<nil>),
                        Operator: (*int)(<nil>)
                      }),
                      Detour: (bool) false
                    }),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              })
            }
          }),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        })
      }
    },
    (tree.Node) {
      Headers: (map[string]string) (len=1) {
        (string) (len=5) "title": (string) (len=8) "Swimming"
      },
      Statements: ([]*tree.Statement) (len=3) {
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)({
            Text: (*tree.LineFormattedText)({
              Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                (*tree.LineFormattedTextElement)({
                  Text: (string) (len=37) "Companion: Where do you want to swim?",
                  Expression: (*variable.Expression)(<nil>)
                })
              }
            }),
            Condition: (*variable.Expression)(<nil>),
            Tags: ([]string) <nil>
          }),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        }),
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)(<nil>),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)({
            Options: ([]*tree.ShortcutOption) (len=2) {
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=17) "Player: The lake!",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=1) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=41) "Companion: Nice! It's a great day for it.",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              }),
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=26) "Player: The swimming pool!",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=1) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=59) "Companion: Oh, awesome! I heard they installed a new slide.",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              })
            }
          }),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        }),
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)(<nil>),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)({
            Expression: (*variable.Expression)({
              Value: (*variable.Value)({
                Number: (*float64)(<nil>),
                Boolean: (*bool)(<nil>),
                String: (*string)((len=4) "Done")
              }),
              VariableID: (*string)(<nil>),
              FunctionCall: (*variable.FunctionCall)(<nil>),
              NegativeExpression: (*variable.Expression)(<nil>),
              NotExpression: (*variable.Expression)(<nil>),
              LeftOperand: (*variable.Expression)(<nil>),
              RightOperand: (*variable.Expression)(<nil>),
              Operator: (*int)(<nil>)
            }),
            Detour: (bool) false
          }),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        })
      }
    },
    (tree.Node) {
      Headers: (map[string]string) (len=1) {
        (string) (len=5) "title": (string) (len=6) "Hiking"
      },
      Statements: ([]*tree.Statement) (len=3) {
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)({
            Text: (*tree.LineFormattedText)({
              Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                (*tree.LineFormattedTextElement)({
                  Text: (string) (len=48) "Companion: Have you got your hiking boots ready?",
                  Expression: (*variable.Expression)(<nil>)
                })
              }
            }),
            Condition: (*variable.Expression)(<nil>),
            Tags: ([]string) <nil>
          }),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        }),
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)(<nil>),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)({
            Options: ([]*tree.ShortcutOption) (len=2) {
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=12) "Player: Yes.",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=1) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=27) "Companion: Great, let's go!",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              }),
              (*tree.ShortcutOption)({
                LineStatement: (*tree.LineStatement)({
                  Text: (*tree.LineFormattedText)({
                    Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                      (*tree.LineFormattedTextElement)({
                        Text: (string) (len=11) "Player: No.",
                        Expression: (*variable.Expression)(<nil>)
                      })
                    }
                  }),
                  Condition: (*variable.Expression)(<nil>),
                  Tags: ([]string) <nil>
                }),
                Statements: ([]*tree.Statement) (len=1) {
                  (*tree.Statement)({
                    LineStatement: (*tree.LineStatement)({
                      Text: (*tree.LineFormattedText)({
                        Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                          (*tree.LineFormattedTextElement)({
                            Text: (string) (len=55) "Companion: We can swing by your place and pick them up!",
                            Expression: (*variable.Expression)(<nil>)
                          })
                        }
                      }),
                      Condition: (*variable.Expression)(<nil>),
                      Tags: ([]string) <nil>
                    }),
                    ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
                    LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
                    SetStatement: (*tree.SetStatement)(<nil>),
                    JumpStatement: (*tree.JumpStatement)(<nil>),
                    IfStatement: (*tree.IfStatement)(<nil>),
                    CommandStatement: (*tree.CommandStatement)(<nil>),
                    CallStatement: (*tree.CallStatement)(<nil>),
                    DeclareStatement: (*tree.DeclareStatement)(<nil>),
                    ReturnStatement: (*tree.ReturnStatement)(<nil>)
                  })
                }
              })
            }
          }),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        }),
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)(<nil>),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)({
            Expression: (*variable.Expression)({
              Value: (*variable.Value)({
                Number: (*float64)(<nil>),
                Boolean: (*bool)(<nil>),
                String: (*string)((len=4) "Done")
              }),
              VariableID: (*string)(<nil>),
              FunctionCall: (*variable.FunctionCall)(<nil>),
              NegativeExpression: (*variable.Expression)(<nil>),
              NotExpression: (*variable.Expression)(<nil>),
              LeftOperand: (*variable.Expression)(<nil>),
              RightOperand: (*variable.Expression)(<nil>),
              Operator: (*int)(<nil>)
            }),
            Detour: (bool) false
          }),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        })
      }
    },
    (tree.Node) {
      Headers: (map[string]string) (len=1) {
        (string) (len=5) "title": (string) (len=4) "Done"
      },
      Statements: ([]*tree.Statement) (len=1) {
        (*tree.Statement)({
          LineStatement: (*tree.LineStatement)({
            Text: (*tree.LineFormattedText)({
              Elements: ([]*tree.LineFormattedTextElement) (len=1) {
                (*tree.LineFormattedTextElement)({
                  Text: (string) (len=20) "Player: Sounds good!",
                  Expression: (*variable.Expression)(<nil>)
                })
              }
            }),
            Condition: (*variable.Expression)(<nil>),
            Tags: ([]string) <nil>
          }),
          ShortcutOptionStatement: (*tree.ShortcutOptionStatement)(<nil>),
          LineGroupStatement: (*tree.LineGroupStatement)(<nil>),
          SetStatement: (*tree.SetStatement)(<nil>),
          JumpStatement: (*tree.JumpStatement)(<nil>),
          IfStatement: (*tree.IfStatement)(<nil>),
          CommandStatement: (*tree.CommandStatement)(<nil>),
          CallStatement: (*tree.CallStatement)(<nil>),
          DeclareStatement: (*tree.DeclareStatement)(<nil>),
          ReturnStatement: (*tree.ReturnStatement)(<nil>)
        })
      }
    }
  }
})
